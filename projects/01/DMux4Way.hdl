// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux4Way.hdl

/**
 * 4-way demultiplexor:
 * {a, b, c, d} = {in, 0, 0, 0} if sel == 00
 *                {0, in, 0, 0} if sel == 01
 *                {0, 0, in, 0} if sel == 10
 *                {0, 0, 0, in} if sel == 11
 */

CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    // sel = 01
    // in = 1
    // sel = 0
    DMux(in=in, sel=sel[1], a=m1, b=m2);
    // {1, 0}
    // m1=1
    // sel=1
    DMux(in=m1, sel=sel[0], a=a, b=b);
    // a=0
    // b=1

    // m2=0
    // sel=1
    DMux(in=m2, sel=sel[0], a=c, b=d);
    // {0, 0}
    // c=0
    // d=0

    /**
     * This on took me a while to understand, but it works by 
     * sort of disregaring half of the operation by using the first
     * DMux gate.
     */
}
