// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
      // One field to select a Ram-Part
      // the other to sleect register within that ram part
      DMux8Way(in=load, sel=address[3..5], a=d0, b=d1, c=d2, d=d3, e=d4, f=d5, g=d6, h=d7);
      RAM8(in=in, load=d0, address=address[0..2], out=o0);
      RAM8(in=in, load=d1, address=address[0..2], out=o1);
      RAM8(in=in, load=d2, address=address[0..2], out=o2);
      RAM8(in=in, load=d3, address=address[0..2], out=o3);
      RAM8(in=in, load=d4, address=address[0..2], out=o4);
      RAM8(in=in, load=d5, address=address[0..2], out=o5);
      RAM8(in=in, load=d6, address=address[0..2], out=o6);
      RAM8(in=in, load=d7, address=address[0..2], out=o7);
      Mux8Way16(a=o0, b=o1, c=o2, d=o3, e=o4, f=o5, g=o6, h=o7, sel=address[3..5], out=out);
}
